#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Nov 28, 2017 02:32:37 PM
import sys
from datetime import date
import time 
from threading import Thread
from GTMain import App

try:
	from Tkinter import *
except ImportError:
	from tkinter import *

try:
	import ttk
	py3 = 0
except ImportError:
	import tkinter.ttk as ttk
	py3 = 1

import sam_support

def vp_start_gui():
	'''Starting point when module is the main routine.'''
	global val, w, root
	root = Tk()
	top = Smart_Attendance_Monitor (root)
	sam_support.init(root, top)
	top.update_clock()
	root.mainloop()

w = None
def create_Smart_Attendance_Monitor(root, *args, **kwargs):
	'''Starting point when module is imported by another program.'''
	global w, w_win, rt
	rt = root
	w = Toplevel (root)
	top = Smart_Attendance_Monitor (w)
	sam_support.init(w, top, *args, **kwargs)
	return (w, top)

def destroy_Smart_Attendance_Monitor():
	global w
	w.destroy()
	w = None


class Smart_Attendance_Monitor:
	def __init__(self, top=None):
		'''This class configures and populates the toplevel window.
		   top is the toplevel containing window.'''
		_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
		_fgcolor = '#000000'  # X11 color: 'black'
		_compcolor = '#d9d9d9' # X11 color: 'gray85'
		_ana1color = '#d9d9d9' # X11 color: 'gray85' 
		_ana2color = '#d9d9d9' # X11 color: 'gray85' 
		font11 = "-family {Courier New} -size 20 -weight normal -slant"  \
			" italic -underline 0 -overstrike 0"
		font14 = "-family {Courier New} -size 15 -weight normal -slant"  \
			" italic -underline 0 -overstrike 0"
		font15 = "-family {Courier New} -size 12 -weight normal -slant"  \
			" italic -underline 0 -overstrike 0"

		top.geometry("600x450+661+223")
		top.title("Smart Attendance Monitor")
		top.configure(background="#d9d9d9")
		top.configure(highlightbackground="#d9d9d9")
		top.configure(highlightcolor="black")
		top.protocol("WM_DELETE_WINDOW", self.on_exit)

		self.app = App()
		self.th = { 'v': False, 'thread': None }
		self.scanThread = { 'v': False, 'thread': None}

		self.stop = False
		self.obj = {}

		self.Sam = Frame(top)
		self.Sam.place(relx=0.02, rely=0.03, relheight=0.94, relwidth=0.96)
		self.Sam.configure(relief=GROOVE)
		self.Sam.configure(borderwidth="2")
		self.Sam.configure(relief=GROOVE)
		self.Sam.configure(background="#ffffff")
		self.Sam.configure(width=575)

		self.Date = Label(self.Sam)
		self.Date.place(relx=0.12, rely=0.03, height=51, width=434)
		self.Date.configure(background="#d9d9d9")
		self.Date.configure(disabledforeground="#a3a3a3")
		self.Date.configure(font=font11)
		self.Date.configure(foreground="#000000")
		self.Date.configure(padx="0")
		self.Date.configure(pady="0")
		self.Date.configure(text='''Monday  1, January  1970''')
		self.Date.configure(width=434)

		self.Time = Label(self.Sam)
		self.Time.place(relx=0.32, rely=0.18, height=31, width=204)
		self.Time.configure(activebackground="#f9f9f9")
		self.Time.configure(activeforeground="black")
		self.Time.configure(background="#d9d9d9")
		self.Time.configure(disabledforeground="#a3a3a3")
		self.Time.configure(font=font14)
		self.Time.configure(foreground="#000000")
		self.Time.configure(highlightbackground="#d9d9d9")
		self.Time.configure(highlightcolor="black")
		self.Time.configure(padx="0")
		self.Time.configure(pady="0")
		self.Time.configure(text='''02:00 PM''')
		self.Time.configure(width=204)

		self.Frame2 = Frame(self.Sam)
		self.Frame2.place(relx=0.37, rely=0.29, relheight=0.35, relwidth=0.26)
		self.Frame2.configure(relief=GROOVE)
		self.Frame2.configure(borderwidth="2")
		self.Frame2.configure(relief=GROOVE)
		self.Frame2.configure(background="#d9d9d9")
		self.Frame2.configure(width=205)

		# i = open("giphy.gif")
		p = PhotoImage(file="giphy.gif")

		self.Label4 = Label(self.Frame2, image=p)
		self.Label4.place(relx=0.0, rely=0.0, height=150, width=150)
		self.Label4.image = p

		self.Status = Label(self.Sam)
		self.Status.place(relx=0.03, rely=0.68, height=35, width=536)
		self.Status.configure(background="#d9d9d9")
		self.Status.configure(disabledforeground="#a3a3a3")
		self.Status.configure(font=font15)
		self.Status.configure(foreground="#25521f")
		self.Status.configure(padx="0")
		self.Status.configure(pady="0")
		self.Status.configure(text='''Please put your finger on the sensor.''')
		self.Status.configure(width=536)

		self.Button1 = Button(self.Sam)
		self.Button1.place(relx=0.10, rely=0.82, height=44, width=77)
		self.Button1.configure(activebackground="#d9d9d9")
		self.Button1.configure(activeforeground="#000000")
		self.Button1.configure(background="#d9d9d9")
		self.Button1.configure(disabledforeground="#a3a3a3")
		self.Button1.configure(foreground="#000000")
		self.Button1.configure(highlightbackground="#d9d9d9")
		self.Button1.configure(highlightcolor="black")
		self.Button1.configure(pady="0")
		self.Button1.configure(relief=GROOVE)
		self.Button1.configure(text='''O-T''')

		self.Button2 = Button(self.Sam)
		self.Button2.place(relx=0.31, rely=0.82, height=44, width=77)
		self.Button2.configure(activebackground="#d9d9d9")
		self.Button2.configure(activeforeground="#000000")
		self.Button2.configure(background="#d9d9d9")
		self.Button2.configure(disabledforeground="#a3a3a3")
		self.Button2.configure(foreground="#000000")
		self.Button2.configure(highlightbackground="#d9d9d9")
		self.Button2.configure(highlightcolor="black")
		self.Button2.configure(pady="0")
		self.Button2.configure(relief=GROOVE)
		self.Button2.configure(text='''Menu''')

		self.Button3 = Button(self.Sam)
		self.Button3.place(relx=0.53, rely=0.82, height=44, width=77)
		self.Button3.configure(activebackground="#d9d9d9")
		self.Button3.configure(activeforeground="#000000")
		self.Button3.configure(background="#d9d9d9")
		self.Button3.configure(disabledforeground="#a3a3a3")
		self.Button3.configure(foreground="#000000")
		self.Button3.configure(highlightbackground="#d9d9d9")
		self.Button3.configure(highlightcolor="black")
		self.Button3.configure(pady="0")
		self.Button3.configure(relief=GROOVE)
		self.Button3.configure(text='''Signin''')

		self.Button4 = Button(self.Sam)
		self.Button4.place(relx=0.74, rely=0.82, height=44, width=77)
		self.Button4.configure(activebackground="#d9d9d9")
		self.Button4.configure(activeforeground="#000000")
		self.Button4.configure(background="#d9d9d9")
		self.Button4.configure(disabledforeground="#a3a3a3")
		self.Button4.configure(foreground="#000000")
		self.Button4.configure(highlightbackground="#d9d9d9")
		self.Button4.configure(highlightcolor="black")
		self.Button4.configure(pady="0")
		self.Button4.configure(relief=GROOVE)
		self.Button4.configure(text='''Signout''')

	def on_exit(self):
		self.stop = True
		self.app.stopScan = True
		root.destroy()

	def update_clock(self):
		if self.th['v'] == False:
			print("Blinker Started")
			self.th = { 'v': True, 'thread': self.thread(self.startBlink) }

		if self.scanThread['v'] == False:
			print("Scanner Started")
			self.scanThread = { 'v': True, 'thread': self.thread(self.app.scanLoop) }

		self.Time.configure(text=time.strftime("%I:%M:%S %p"))
		self.Date.configure(text=date.today().strftime('%A %d %B %Y'))
		root.after(1000, self.update_clock)

	def thread(self, cmd):
		t1 = Thread(target=cmd, args=[])
		t1.start()
		return t1

	def startBlink(self):
		stop = self.stop
		print("Thread Start")
		while stop == False:
			stop = self.stop
			print (stop)
			if stop == True:
				break;
			self.blink()
		print("Thread Stop")

	def blink(self):
		self.Status.configure(text="")
		time.sleep(0.5)
		self.Status.configure(text="** Please scan your fingerprint **")
		time.sleep(0.5)

if __name__ == '__main__':
	vp_start_gui()



